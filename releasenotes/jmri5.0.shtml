<!DOCTYPE html>
<html lang="en">

<head>
 <meta http-equiv="content-type" content="text/html; charset=utf-8">
 <title>
    JMRI: Release Notes for 5.0
 </title>
    <meta content="Bob Jacobsen" name="author">
    <meta name="keywords" content="java model railroad JMRI 5.0 decoderpro panelpro loconet lenz nce easydcc dcc nmra">

 <!--#include virtual="/Style.shtml" -->
</head>

<body>
<!--#include virtual="/Header.shtml" -->

<div id="mBody">
    <!--#include virtual="../download/Sidebar.shtml" -->
    <div id="mainContent">
      <h1>
      Release Notes for JMRI 5.0 release
      </h1>

    <p>Date: MM DD, YYYY</p>
    <p>From: (release pumpkin)</p>
    <p>Subject: Production Release 5.0 of JMRI/DecoderPro is available for download.</p>

<p><b>This is a draft release note only; the download links do not yet work</b></p>

<p>We are very pleased to announce that the 4.99 series of JMRI test releases has resulted in a
version that's good enough to be recommended for general use, including by new users.
We're therefore making that version, "Production Release 5.0" available for download today.</p>

<a id="note" name="note"></a>
<h2>Notes:</h2>

<p><b>
JMRI is now only available under the
<a href="/COPYING">GNU General Public License</a>. For more information, please
see our
<a href="/Copyright.html">copyright and licensing page</a>.</b></p>

<p class="noted"><b>This release requires Java 11 to work.</b><br/>
(See <a href="http://jmri.org/java">our page on downloading Java 11</a>)

<a id="update" name="update"></a>
<h3>Update From Older JMRI Versions</h3>

If you are currently using a version older than JMRI 4.20, please follow these instructions carefully:
<!-- Note:  At this point, we're not requiring an update to 4.22; change if needed-->
<ol>
<li>Is your current version older than <a href="jmri4.12.shtml">JMRI 4.12</a>?
    If so, then update to <a href="jmri4.12.shtml">JMRI 4.12</a> first, and ensure everything works correctly: check
    start-up, check things you need to be working, and check the JMRI log as well) before doing anything else.
    Store your configuration and panel files under a new name and use those from now on.
    Then continue with step 2.
    <p>
    If you are currently using JMRI 4.7.3 or earlier on Linux or macOS (Windows doesn't need this),
    then it's <u>very important</u>
    that you update to <a href="jmri4.12.shtml">JMRI 4.12</a> and
    carrying out the <a href="jmri4.12.shtml#migration">migration process described in the JMRI 4.12 release note</a>
    before updating to any later relese.
    </li>

<li>Is your current version older than <a href="jmri4.20.shtml">JMRI 4.20</a>?
    Then update to <a href="jmri4.20.shtml">JMRI 4.20</a> first, and ensure that works correctly (check
    start-up, check things you need to be working, and check the JMRI log as well) before doing anything else.
    Save your preferences again.
    Store your configuration and panel files under a new name and use those from now on.</li>

<li>You can then install this release.

</ol>

Following this multi-step order of updating via stable major releases safeguards you against possible migration issues
that can arise from skipping these versions.

<a id="problems" name="problems"></a>
<h3>New problems with this release</h3>
<ul>
    <li>None yet</li></ul>
<!--
If any of those affect you, please either
wait for
<a href="jmri4.26.1.shtml">JMRI 4.26.1</a>, due out shortly,
or (once there's a fix for the problem) pick up a
<a href="https://builds.jmri.org/jenkins/job/development/job/packages/">development build installer</a>
from
<a href="https://builds.jmri.org/jenkins/job/development/job/packages/">Jenkins</a>.</p>
 -->

<a id="warnings" name="warnings"></a>
<h3>New warnings for this production release:</h3>

<ul>
    <li><span class="since">Since <a href="jmri4.99.2.shtml">JMRI 4.99.2</a></span>
        Example scripts related to MQTT moved from jython directory to jython\MQTT directory.  This will require
        an update to any start-up actions that reference their location.
    </li>
    <li><span class="since">Since <a href="jmri4.99.1.shtml">JMRI 4.99.1</a></span>
        This test release, and all subsequent ones, require the use of
        Java 11 or later.  Java 8 is explicitly not supported.
        There's more information on this migration on the
        <a href="https://www.jmri.org/help/en/html/doc/Technical/TechRoadMap.shtml">JMRI Tech Road Map</a> and
        <a href="https://www.jmri.org/help/en/html/doc/Technical/JVMCapabilities.shtml">JVM Capabilities</a> pages.
    </li>
    <li><span class="since">Since <a href="jmri4.99.1.shtml">JMRI 4.99.1</a></span>
        A number of classes and methods that have been deprecated for a long time
        are removed in this release.  These include:
        <ul>
            <li>apps.JmriPlugin</li>
            <li>apps/startup/StartupActionFactory</li>
            <li>Routes/Turnouts/Sensors: One form of getNextAddress</li>
            <li>Handling of preferences from before JMRI 4.0; upgrade through JMRI 4.20 instead</li>
            <li>ShutDownTask, AbstractShutDownTask - use call & run methods now</li>
            <li>Removed JythonAutomaton, JythonAutomatonAction, JythonSiglet, JythonSigletAction
                unused classes.  These have been made obsolete by JMRI's native scripting,
                and haven't been used since JMRI 1.2
            </li>
            <li>SSL (BlockBossLogic) - change to start/stop calls</li>
            <li>Various TrafficManagers.instance methods - use InstanceManager</li>
            <li>Throttle.getListeners() - use getPropertyChangeListeners</li>
            <li>Removed obsolete RosterRecorder class;
                function now available via scripting
            </li>
            <li>Removed deprecated methods from Throttle panels</li>
            <li>Manager.getSystemNameList - rework with getNamedBeanSet</li>
            <li>Manager.getNamedBeanList - rework with getNamedBeanSet</li>
            <li>Manager.setPropertyChangesMuted - use setPropertyChangesSilenced</li>
            <li>Manager.getBeanBySystemName - use getBySystemName</li>
            <li>Manager.getBeanByUserName - use getByUserName</li>
            <li>FileChooserUtil</li>
            <li>get/setFontFamily in SystemConsolePreferencesManager</li>
            <li>throttle.FunctionPanel#changeState(..) has been replaced by #setSelected(..)</li>
        </ul>
    </li>
    <li><span class="since">Since <a href="jmri4.99.1.shtml">JMRI 4.99.1</a></span>
        The PowerManager now only fires events with the id "power".  Before this
        release, it also fired events with the id "Power". Check that
        your scripting code is looking for the right form.
    <li><span class="since">Since <a href="jmri4.99.1.shtml">JMRI 4.99.1</a></span>
        This version no longer reads ZeroConf IPv4 and IPv6 preferences
        written with JMRI 4.16 and before.  Please make sure to upgrade
        to JMRI 4.20 (or later) and save your preferences before
        updating to this version if you have configured the WiThrottle preference pane.</li>
</ul>


<h3>Older warnings</h3>

See the <a href="jmri4.20.shtml#warnings">JMRI 4.20 release note</a> for more warnings predating the 4.21 development series,
including pointers to various migration issues.
These may be relevant to you if you're updating from an earlier version;
we strongly recommend you update to <a href="jmri4.20.shtml">JMRI 4.20</a>
before installing this release.

<ul>
    <li><span class="since">Since <a href="jmri4.99.2.shtml">JMRI 4.99.2</a></span>
        Example scripts related to MQTT moved from jython directory to jython\MQTT directory.  This will require
        an update to any start-up actions that reference their location.
    </li>
    <li><span class="since">Since <a href="jmri4.99.1.shtml">JMRI 4.99.1</a></span>
        This release, and all subsequent ones, require the use of
        Java 11 or later.  Java 8 is explicitly not supported.
        There's more information on this migration on the
        <a href="https://www.jmri.org/help/en/html/doc/Technical/TechRoadMap.shtml">JMRI Tech Road Map</a> and
        <a href="https://www.jmri.org/help/en/html/doc/Technical/JVMCapabilities.shtml">JVM Capabilities</a> pages.
    </li>
    <li><span class="since">Since <a href="jmri4.99.1.shtml">JMRI 4.99.1</a></span>
        A number of classes and methods that have been deprecated for a long time
        are removed in this release.  These include:
        <ul>
            <li>apps.JmriPlugin</li>
            <li>apps/startup/StartupActionFactory</li>
            <li>Routes/Turnouts/Sensors: One form of getNextAddress</li>
            <li>Handling of preferences from before JMRI 4.0; upgrade through JMRI 4.20 instead</li>
            <li>ShutDownTask, AbstractShutDownTask - use call & run methods now</li>
            <li>Removed JythonAutomaton, JythonAutomatonAction, JythonSiglet, JythonSigletAction
                unused classes.  These have been made obsolete by JMRI's native scripting,
                and haven't been used since JMRI 1.2
            </li>
            <li>SSL (BlockBossLogic) - change to start/stop calls</li>
            <li>Various TrafficManagers.instance methods - use InstanceManager</li>
            <li>Throttle.getListeners() - use getPropertyChangeListeners</li>
            <li>Removed obsolete RosterRecorder class;
                function now available via scripting
            </li>
            <li>Removed deprecated methods from Throttle panels</li>
            <li>Manager.getSystemNameList - rework with getNamedBeanSet</li>
            <li>Manager.getNamedBeanList - rework with getNamedBeanSet</li>
            <li>Manager.setPropertyChangesMuted - use setPropertyChangesSilenced</li>
            <li>Manager.getBeanBySystemName - use getBySystemName</li>
            <li>Manager.getBeanByUserName - use getByUserName</li>
            <li>FileChooserUtil</li>
            <li>get/setFontFamily in SystemConsolePreferencesManager</li>
            <li>throttle.FunctionPanel#changeState(..) has been replaced by #setSelected(..)</li>
        </ul>
    </li>
    <li><span class="since">Since <a href="jmri4.99.1.shtml">JMRI 4.99.1</a></span>
        The PowerManager now only fires events with the id "power".  Before this
        release, it also fired events with the id "Power". Check that
        your scripting code is looking for the right form.
    <li><span class="since">Since <a href="jmri4.99.1.shtml">JMRI 4.99.1</a></span>
        This version no longer reads ZeroConf IPv4 and IPv6 preferences
        written with JMRI 4.16 and before.  Please make sure to upgrade
        to JMRI 4.20 (or later) and save your preferences before
        updating to this version if you have configured the WiThrottle preference pane.</li>

    <li><span class="since">Since <a href="jmri4.21.1.shtml">JMRI 4.21.1</a></span>
        The jmri.jmrix.SystemConnectionMemo class has become a jmri.SystemConnectionMemo
        interface and a jmri.jmrix.DefaultSystemConnectionMemo class. This may
        require changes to scripts.  If you have a script that references
        jmri.jmrix.SystemConnectionMemo, please change it to either
        jmri.SystemConnectionMemo or jmri.jmrix.DefaultSystemConnectionMemo
        (it's easier to have you just try the two than to explain which
        one will work in which case)
    </li>

    <li><span class="since">Since <a href="jmri4.21.1.shtml">JMRI 4.21.1</a></span>
        The way preferences are loaded at startup has been slightly
        modified.  There is no impact to JMRI applications, but Non-JMRI
        applications that are not derived from apps.Apps or apps.AppsBase
        but are using jmri.implementation.JmriConfigurationManager to load
        preferences will no longer see preferences if an error occurs.  To
        restore the old behavior, use apps.AppsConfigurationManager instead.
    </li>

    <li><span class="since">Since <a href="jmri4.11.4.shtml">JMRI 4.11.4</a></span>
        There are issues with the Pi-SPROG One command station operation. A number of workarounds should be applied:
        <ul>
            <li>Do not turn on the track power until the power supply to the Pi-SPROG ONE is turned on</li>
            <li>Do not enable extra debugging through default.lcf, nor open the system console window</li>
            <li>Do not open the SPROG console window</li>
            <li>Disable power conversion (CV 29) in all locos</li>
            <li>If connecting via VNC (or similar), setup the screen layout before turning on the track power</li>
        </ul>
        Pi-SPROG One with version 2.4 or earlier firmware will cause a timeout after a track short circuit. A dialog box will
        open to inform the user of this. The track power will be turned off and must be turned on again using the power control.
    </li>
</ul>

<a id="download" name="download"></a>
<h2>Download links:</h2>

<!--
<div class="wide">
<ul>
<li>OS X / macOS: <a
	href="https://github.com/JMRI/JMRI/releases/download/v4.26/JMRI.4.26+R381c8dfc32.dmg">https://github.com/JMRI/JMRI/releases/download/v4.26/JMRI.4.26+R381c8dfc32.dmg</a><br/>
  sha256: 9c98f4d8bbc682217cf764450a2893f3c08cade11fec1b166a91b939a6d50d3b </li>

<li>Windows: <a
	href="https://github.com/JMRI/JMRI/releases/download/v4.26/JMRI.4.26+R381c8dfc32.exe">https://github.com/JMRI/JMRI/releases/download/v4.26/JMRI.4.26+R381c8dfc32.exe</a><br/>
   sha256: 4456c8dae820b7a554fe5ba1753755d2a655af6ae93a3deab58778a32508f9ec</li>

<li>Linux: <a
	href="https://github.com/JMRI/JMRI/releases/download/v4.26/JMRI.4.26+R381c8dfc32.tgz">https://github.com/JMRI/JMRI/releases/download/v4.26/JMRI.4.26+R381c8dfc32.tgz</a><br/>
   sha256: fcb51b04e291c9ef971424ad25af73864c15dfdd5bb0ba73ad1d90c9129dd754</li>
</ul>
</div>
 -->

<!--
Preliminary build files (not the final released files) can be found
on the
<a href="https://builds.jmri.org/jenkins/job/testreleases/job/4.26">CI project page</a>.
 -->

During development leading to the actual release, you can find test download files on the
<a href="https://builds.jmri.org/jenkins/job/development/job/packages/">continuous integration build page</a>.
These are development files, and might not be working at any particular time.</p>

<a id="changes" name="changes"></a>
<h2>Changes since <a href="jmri4.26.shtml">production release 4.26</a>:</h2>

<p>
This production version is made from test releases 4.99.1 through 4.99.9  The
<a href="https://github.com/JMRI/JMRI/pulls?utf8=✓&q=is%3Apr+merged%3A2021-12-16..2022-06-16">list of changes</a>
in those is
<a href="https://github.com/JMRI/JMRI/pulls?utf8=✓&q=is%3Apr+merged%3A2021-12-16..2022-06-16">available from our code repository</a>.

    <h3>Hardware Support</h3>

        <h4>C/MRI</h4>
            <ul>
                <li>Added CmriExample.py,
                    a sample script for directly sending a C/MRI frame.</li>
            </ul>

        <h4>CBUS</h4>
            <ul>
                <li>Lawicell devices - added RTR CAN Frame support.</li>
                <li>The consist tool is now available for the Pi-SPROG 3v2 in command station mode, the SPROG 3 Plus and the MERG CANCMD.</li>
                <li>Console - Added Throttle speed / direction translations.</li>
            </ul>

        <h4>DCC4pc</h4>
            <ul>
                <li>
                    DCC4pc now has multi-system capability
                </li>
            </ul>

        <h4>DCC++ and DCC-EX</h4>
            <ul>
                <li>handle new locoState reply to sync speed, dir and Fkeys</li>
                <li>Add throttle commands and replies to simulator</li>
                <li>Updated to take advantage of Version 4 changes</li>
            </ul>

        <h4>KPF-Zeller</h4>
            <ul>
                <li>Initial support for the
                    <a href="https://kpf-zeller.de/kpf/rollenstand/index.php">KPF-Zeller roller speedometer</a>.</li>
                <li>Improved the speed calibration</li>
            </ul>

        <h4>LocoNet</h4>
            <ul>
                <li>Updated some new IPL report messages</li>
                <li>Add configuration support for UR93, LNWIs. Allow updates for individual parameters.</li>
                <li>Added Digitrax DCS210Plus command station</li>
                <li>A storm of LocoNet messages could result if certain command station models
                    have track power turned off whem JMRI starts. The status enquiry messages would
                    fail, and JMRI would repeat them in an effort to get complete information from the layout.
                    This release no longer retries messages in that case. If you are not getting
                    initial status from some devices on your layout, you should power up
                    your LocoNet system, including track power, before starting JMRI.
                <li>Configuration - Permit disabling of interrogate messages.</li>
                <li>Slotmonitor - better guess the column widths</li>
                <li>The DCS240 command station type was defaulting to the standalone programmer mode.
                If a user was not paying attention, they would have issues trying to use all of the
                command station capability.</li>
                <li>Some message interpretation features provided by "LocoNet Monitor" have been
                    'refactored' and slightly improved.</li>
            </ul>

        <h4>MERG</h4>
            <ul>
                <li>The consist tool is now available for CBUS.</li>
            </ul>

        <h4>MQTT</h4>
            <ul>
                <li>Native MQTT SignalMasts are available.</li>
                <li>Splash screen shows connection address</li>
                <li>LogixNG has now support for MQTT. If a MQTT connection is
                defined, the category MQTT is visible with the LogixNG actions
                <i>Publish</i> and <i>Subscribe</i>.</li>
                <li>Handled a case in MQTT signal masts that would cause a
                    spurious error message.</li>
                <li>Added a script to echo SignalHeads to MQTT</li>
            </ul>

        <h4><a href="http://openlcb.org">OpenLCB</a> / LCC</h4>
            <ul>
                <li>Lawicell devices - added RTR CAN Frame support.</li>
                <li><b>Throttle support.</b> JMRI Throttles can now operate
                OpenLCB locomotives on OpenLCB / LCC Command Stations via the
                Traction Protocol draft.</li>
                <li><b>Monitor Log updates.</b> Decodes and prints the Traction
                Protocol messages in the Monitor Log window.</li>
                <li><b>Accessibility changes.</b> The network browser / tree is
                now navigable using keyboard shortcuts. On the Configuration
                Editor panel the keys F6 and Shift+F6 can be used to navigate
                between subsequent sections of the configuration and the bar of
                buttons at the bottom.</li>
                <li><b>Test Event button.</b> In the Configuration Editor the
                Event panels have a new button More... which opens a
                dropdown. In the dropdown there is a Trigger button which sends
                the given event. This is useful for testing. In the same
                dropdown there is a Create Sensor button which for JMRI will
                create a single-event sensor.</li>
                <li><b>Bug fixes.</b> Fixes memory leak when opening many
                different nodes' Configuration Editor windows. The CAN
                Interface engine now correctly supports sending a message to a
                Destination Node ID for which there is no currently registered
                Alias in the Alias Map. The outgoing message will be enqueued
                and an alias lookup interaction is triggered.</li>
            </ul>

       <h4>SPROG</h4>
            <ul>
                <li>The consist tool is now available for the Pi-SPROG 3v2 in command station mode and for the SPROG 3 Plus.</li>
            </ul>

        <h4>TMCC</h4>
            <ul>
                <li>Enabled functions 23-27 in the throttle.</li>
            </ul>

        <h4>Uhlenbrock Intellibox</h4>
            <ul>
                <li>Improved handling of the decoder functions.</li>
            </ul>


    <h3>New / Updated decoder definitions</h3>
        <ul>
          <li>Added multiple SUSI accessory decoder definitions.</li>
        </ul>

        <h4>Digitrax</h4>
            <ul>
              <li>Added Kato EM13 in Digitrax family: newer versions of this decoder have a Digitrax manufacturer code and a full fledged Digitrax SW.</li>
            </ul>

        <h4>Doehler &amp; Haas</h4>
            <ul>
              <li>Added PD10MU: This is a specific decoder for <a href=https://www.dm-toys.de/fr/produit-detail/DH_PD10MU-4.html target=_BLANK>ModellBahn Union / DM-Toys</a>. Same SW as PD12A, but N scale form factor.</li>
            </ul>

        <h4>ESU</h4>
            <ul>
                <li>Fixed a problem introduced in JMRI 4.99.3 that
                prevents the function settings from being properly stored.</li>
            </ul>

        <h4>MD Electronics</h4>
             <ul>
                <li>Added a definition for the MDE HDD turntable decoder.</li>
             </ul>

        <h4>SoundTraxx</h4>
            <ul>
                <li>TSU2 Genesis Diesel - add SD70ACU and Dash 9-44CW</li>
		        <li>TSU Genesis Steam - N Challenger add CV and change some default value per user request</li>
            </ul>

        <h4>Tam Valley Depot</h4>
            <ul>
                <li>QuadLN_S - added support for new firmware version 3.1 features</li>
            </ul>

        <h4>ZIMO</h4>
            <ul>
                <li>added new decoder definitions for Firmware v40.x</li>
                <li>Updated some MX640-series definitions, adding menu items for on-track operations.</li>
                <li>Fixed the coding for CV155 Half Speed Settings</li>
                <li>Added MX605N: Zimo non-sound decoder for Kato N ICE4 - same form factor as Kato EM13. <i>Note that MX605 (already in DecoderPro) is the sound-version of MX605N</i>.</li>
            </ul>

    <h3>DecoderPro</h3>
        <a id="DecoderPro" name="DecoderPro"></a>
        <ul>
            <li>Added accessible names to the (simple)
                variables displayed on programming panes.</li>
            <li>Decoder definitions can now add items to the main programmer-pane window menu.
            <li>You can now write out just edited CV values to a CSV file.</li>
            <li>The programmer pane "display" element now supports a "viewOnly" attribute.
                For more information see the
                <a href="/help/en/html/apps/DecoderPro/Programmer.shtml" target="_blank">Create a Custom Programmer</a>
                page.
            </li>
            <li>Improved handling of improper input in variables.</li>
            <li>Improved accessibility of programming mode selections.</li>
            <li>Improved accessibility of some buttons.</li>
        </ul>

    <h3>Dispatcher</h3>
        <a id="Dispatcher" name="Dispatcher"></a>
        <ul>
             <li>Fix XCrossings allocation.</li>
             <li>Improve AutoEngineer. Permit unlimited number of Auto Trains.</li>
             <li>Fixed bouncing speed slider in manual mode.</li>
             <li>Size AutoTrainsWindow correctly when going between auto and manual with use scroll bars off.</li>
             <li>Enabled disaplay scale speed for running with speed profiles.</li>
        </ul>

   <h3>Internationalization</h3>
        <a id="I18N" name="I18N"></a>
        <ul>
            <li>Spanish translation added to decoder and programmer panes</li>
            <li>Rodrigo Rodriguez translated much of the GUI into Spanish.</li>
        </ul>

    <h3>Layout Editor</h3>
        <a id="LE" name="LE"></a>
        <ul>
          <li>Use the actual turnout state for the turnout circle when that option is used.  This
          corrects the color for turnouts using the continuing route option when set to thrown.</li>

          <li>Tooltip support for panel icons has been changed.
          See <a href="https://www.jmri.org/help/en/package/jmri/jmrit/display/Tooltips.shtml">
          Tooltips</a> for details.</li>
          <li>Update the layout block occupancy sensor when the occupancy sensor for the related
          block has been added, removed or changed to a different sensor.</li>
	      <li>Improved XSLT display of all elements.</li>
	      <li>Fixed an error when an anchor point only had one track segment assigned.</li>
          <li>Improved display of certain images when rotated for display.</li>
        </ul>

    <h3>Logix</h3>
        <a id="Logix" name="Logix"></a>
        <ul>
          <li>A single Logix can now be exported to LogixNG.
		  Open Tools -> Tables -> Logix and select <i>Export
		  to LogixNG</i> for the Logix you want to export.</li>
          <li>Change the system name input for the Copy command to use a combo box.  This makes it
          easier to select an existing Logix as the copy destination.</li>
        </ul>

    <h3>LogixNG</h3>
        <a id="LogixNG" name="LogixNG"></a>
        <ul>
          <li>A single Logix can be imported to LogixNG. Se
		  the section <i>Logix</i> for more information.</li>
          <li>The action <i>Throttle</i> has been updated.
          It now also has the child sockets <i>Function</i>
          and <i>FunctionOnOff</i>. These are optional.
          If both are connected, the Throttle action sets
          or resets this function. The child <i>Function</i>
          tells the function number and the child
          <i>FunctionOnOff</i> tells if the function should
          be On (True) or Off (False).</li>
          <li>A single Logix can be imported to LogixNG. See
          the section <i>Logix</i> for more information.</li>
          <li>The action <i>Throttle</i> has been updated.
          It now also has the child sockets <i>Function</i>
          and <i>FunctionOnOff</i>. These are optional.
          If both are connected, the Throttle action sets
          or resets this function. The child <i>Function</i>
          tells the function number and the child
          <i>FunctionOnOff</i> tells if the function should
          be On (True) or Off (False).</li>
          <li>A single Logix can be imported to LogixNG. See
          the section <i>Logix</i> for more information.</li>
          <li>The action <i>Local Variable</i> now supports
          <i>Block</i> and <i>Reporter</i>. For <i>Memory</i>,
          <i>Block</i> and <i>Reporter</i>, there is a new
          option <i>Listen</i> that selects whenether the
          action should listen on changes for the <i>Memory</i>,
          <i>Block</i> or <i>Reporter</i>.</li>
          <li>The actions <i>Memory</i> and <i>Local variable</i>
          and the expressions <i>Memory</i> and <i>Local variable</i>
          have improved support for LogixNG Tables.</li>
          <li><i>Copy</i> now works in the LogixNG table. With <i>Copy</i>,
          you can copy the entire LogixNG to a new LogixNG with all its ConditionalNGs.</li>
	      <li>Improved XSLT display of all elements.</li>
          <li>Several severe errors have been fixed when doing a copy of a LogixNG action or expression.</li>
          <li>If a female socket of the action Sequence is removed, the socket after it is also removed.</li>
          <li>The action <i>Clock Rate</i> has been added. It sets the
          rate of the fast clock.</li>
          <li><i>Global Variables</i> has been added. A Global Variable
          is similar to a Local Variable, except that it is shared among
          the ConditionalNGs.</li>
          <li>Global variables and Local variables can now be initialized
          with a script expression or a script file.</li>
          <li>The action <i>Listen on beans</i> now protects against
          removal of the beans it's listening to.</li>
          <li>The <i>Edit local variables</i> dialog can now be resized
          so that the table grows and shrinks when it's resized.</li>
          <li>Update the Sequence action to reset itself when done if the continuous option is not
          selected.</li>
          <li>Support for MQTT has been added. If a MQTT connection is
          defined, the category MQTT is visible with the actions <i>Publish</i>
          and <i>Subscribe</i>.</li>
          <li>Fixed a bug where a LogixNG action SignalHead and the LogixNG expression SignalHead
            failed to
            load the name of the signal head when loading a panel stored by a previous JMRI version.
          </li>
          <li>The action Script and the expression Script
          now supports both Jython and ECMA Script (JavaScript).
          As a result, the option <i>Jython command</i> is now
          renamed to <i>Single line command</i>.</li>
        </ul>

    <h3>Operations</h3>
        <a id="Operations" name="Operations"></a>
        <ul>
            <li>Improved the build report</li>
        </ul>

   <h3>Panel Editor</h3>
        <a id="PE" name="PE"></a>
        <ul>
          <li>Tooltips can now be edited in Panel Editor.</li>

          <li>Tooltip support for panel icons has been changed.
          See <a href="https://www.jmri.org/help/en/package/jmri/jmrit/display/Tooltips.shtml">
          Tooltips</a> for details.</li>
            <li>Improved XSLT display of all elements.</li>
            <li>Improved display of certain images when rotated for display.</li>
        </ul>


    <h3>Control Panel Editor</h3>
        <a id="CPE" name="CPE"></a>
        <ul>
          <li>Tooltip support for panel icons has been changed.
          See <a href="https://www.jmri.org/help/en/package/jmri/jmrit/display/Tooltips.shtml">
          Tooltips</a> for details.</li>
          <li>Improved display of certain images when rotated for display.</li>
        </ul>

    <h3>Preferences</h3>
        <a id="Preferences" name="Preferences"></a>
        <ul>
            <li>Improved handling of the dirty bit, which controls whether you're prompted to save preferences.</li>
        </ul>

    <h3>Resources</h3>
        <a id="Resources" name="Resources"></a>
        <ul>
            <li>Inobu One provided new single-crossover icons and additional double-crossover USS icons.</li>
        </ul>

    <h3>RFID</h3>
        <ul>
            <li>Updated: Tags are recorded in a table.
                If there is a Car (from OperationsPro) associated with this tag,
                the Road name and Car number are shown. The location and Track are
                shown in ComboBoxes which the user can set
                and then click on a button to set to the new Location and Track.
                Another button shows the Car in the Edit Car window.
                If there is no associated car, a button opens a window with a list of Road names.
                The user can select a road name and the second list shows all car numbers for that road.
                Once a car number has been selected a button sets the tag in that Car.
                By default the only visible road names and numbers are for cars that do not have a tag.
                A checkbox shows all cars, including those with tags.
            <p>
                The window is opened from the "RFID" menu choice (there is one for each RFID connection).
                The first choice opens the standard Serial Monitor Pane.
                This new Pane is opened from the second choice.
                The help screen can be viewed from the monitor pane,
                or via a link in the Hardware RFID connection frame.</li>
        </ul>

    <h3>Routes</h3>
        <a id="Routes" name="Routes"></a>
       <ul>
            <li>Provide the ability to copy the content from an existing route when creating a new route.</li>
       </ul>

    <h3>Scripting</h3>
        <a id="Scripting" name="Scripting"></a>
        <ul>
            <li>Example scripts related to MQTT moved from jython directory to jython\MQTT directory.</li>
            <li>Initial, very experimental,
                <a href="https://jmri.org/help/en/html/tools/scripting/Python3.shtml">Python 3 support</a>
                is available for macOS and Linux.
            <li>Added simpler accessors to InstanceManager for use in Py3 scripts. See
                jython/test/InstanceManagerTest.py</li>
            <li>Added waitSignalMastState, waitSignalHeadState to AbstractAutomat support.</li>
            <li>Added shortcuts for transits and sections.</li>
        </ul>

    <h3>Signals</h3>
        <a id="Signals" name="Signals"></a>
        <h4>Signal Systems</h4>
            <ul>
                <li>Allow user-modified signal systems to provide
                    their own copy of an existing aspects.xml file.</li>
                <li>New SNCF-2015 French signal system</li>
           </ul>
        <h4>Signal Masts</h4>
            <ul>
                <li>Native MQTT masts are available</li>
                <li>Improved XSLT display of all elements.</li>
            </ul>
    	<h4>Simple Signal Logic</h4>
            <ul>
                <li>Improved XSLT web display to include sensors</li>
            </ul>

   <h3>Switchboard Editor</h3>
        <a id="SW" name="SW"></a>
        <ul>
            <li>The menu options to label a switch were enhanced to allow hiding the system name in case a user
              name is configured. This was suggested by Phil-Klein.</li>
        </ul>

    <h3>Timetable</h3>
        <a id="Timetable" name="Timetable"></a>
        <ul>
            <li>Add a <strong>Copy Stops</strong> button. This is used to copy the stops for an
            existing train to the new train.</li>
        </ul>

    <h3>Throttle</h3>
        <a id="throttle" name="throttle"></a>
        <ul>
            <li>Restored tab and shift+tab shortcuts to browse through throttles inner windows</li>
            <li>Address Panel is now focused as a default when opening a new throttle</li>
            <li>Add capability to display/print throttle files in easy-to-read browser format (using XSL transform)</li>
            <li>If there are at least two connections that have support for throttles, a
            <a href="https://github.com/JMRI/JMRI/pull/10697#issuecomment-1038477488">new menu</a>
            appears that lets you open a throttle for a particular connection.</li>
            <li>Fixed a problem causing a spurious error dialog when opening a roster entry in a throttle</li>
        </ul>

    <h3>Turnouts, Lights, Sensors and other elements</h3>
        <a id="TLae" name="TLae"></a>
        <ul>
            <li>Improved XSLT display of all elements.</li>
            <li>The order of presenting these elements in combo boxes
                has been changed to make it more consistent.  They now
                list all user names first, followed by ones with just system
                names.  This also fixes a problem where some items are
                not listed in the combo box.</li>
            <li>The process for adding multiple Lights/Sensors/Turnouts/Reporters has been
                improved.  Existing items are no longer skipped, so you get the
                sequential items you asked for. Some error messages have been clarified.</li>
        </ul>

   <h3>Virtual Sound Decoder</h3>
        <a id="VSD" name="VSD"></a>
        <ul>
            <li>Added a new version of "advanced location following". This is now based
            on a LayoutEditor panel and hence much easier to setup. See the
            <a href="https://www.jmri.org/help/en/manual/DecoderPro/VSD_LocationsMgr.shtml#advanced_location_following">
			documentation</a> for details.</li>
        </ul>

   <h3>Warrants</h3>
        <a id="Wt" name="Wt"></a>
        <ul>
            <li>Additional bug fixing and enhancements to Shared Warrants. SWs are
                useful to animate the simultaneous operation of multiple trains.
                Be aware that SWs may mutually block movement that can only be resolved
                by aborting at least one of them. Regular warrants avoid such deadlocks
                due to the priority of their launch times.
                <ul>
               <li>SWs will not allocate any blocks beyond or at a "hazard" (occupation
                 by foreign train, passage beyond a stop signal, conflict with another
                 warrant)</li>
               <li>If a ramp down to stop at a "hazard" stops before entering the next block,
                   the restart is done automatically when the condition clears.
                   </li>
               <li>If a ramp down to stop at a "hazard" overruns into the next block, the
                   SW will allocate the next block if that is permissible. Whether or not, i.e.
                   the position of the train is marked yellow or blue, use the normal Control
                   commands to restart. "Resume" if the "hazard" was occupation or a warrant,
                   or wait for the signal change to an allowable speed.
                   </li>
                 </ul>
            <li>The messages to the status field of the warrant Table and other information
                can be displayed to the console by clicking the "Trace Warrants" button in
                Warrant Preferences.</li>
            <li>Additional bug fixing and enhancements to Shared Warrants. SWs are
                useful to animate the simultaneous operation of multiple trains.
                Be aware that SWs may mutually block movement that can only be resolved
                by aborting at least one of them. Regular warrants avoid such deadlocks
                due to the priority of their launch times.
                <ul>
               <li>SWs will not allocate any blocks beyond or at a "hazard" (occupation
                 by foreign train, passage beyond a stop signal, conflict with another
                 warrant)</li>
               <li>If a ramp down to stop at a "hazard" stops before entering the next block,
                   the restart is done automatically when the condition clears.
                   </li>
               <li>If a ramp down to stop at a "hazard" overruns into the next block, the
                   SW will allocate the next block if that is permissible. Whether or not, i.e.
                   the position of the train is marked yellow or blue, use the normal Control
                   commands to restart. "Resume" if the "hazard" was occupation or a warrant,
                   or wait for the signal change to an allowable speed.
                   </li>
                 </ul>
            <li>The messages to the status field of the warrant Table and other information
                can be displayed to the console by clicking the "Trace Warrants" button in
                Warrant Preferences.</li>
            <li>Any warrant, regular or shared, will not allocate blocks beyond a restricted block.
                A block is <b>restricted</b> if it is:
                <ul>
                   <li>Allocated to another warrant.</li>
                    <li>Occupied by an unknown train.</li>
                    <li>Signal protects it from entry.</li>
                </ul>
            </li>
            <li>
                When entering a block, the warrant will allocate as many blocks as it can up to the
                next restricted block or its limit.
                 <ul>
                    <li>Shared warrants only allocate up to a maximum of 2 blocks. (limit is 2)</li>
                    <li>Regular warrants will allocate the full route if no restricted block is found. (unlimited)</li>
                </ul>
            </li>
            <li>
                Crossovers typically use one turnout to control both switches. Often, each switch is
                track in different blocks. For such shared turnouts, throwing the switch in one block
                may change the path in another block and could cause a derailment.
                 <ul>
                    <li>Warrants now detect shared turnouts. Should the paths in the respective
                    blocks have different settings for the turnout, the warrant will allocate the block
                    sharing the turnout but <b>not</b> set its path.</li>
                    <li>The warrant will stop the train before
                     entering the block. The train will continue when the conflict is resolved.</li>
                 </ul>
            </li>
            <li>
                Block status of OUT_OF_SERVICE is informational. Warrants can allocate OUT_OF_SERVICE blocks.
            </li>
            <li>
                The "Set" column of the Warrant List Table is removed. The "Allocate" column indicates the route.
                The path is set if the block is not in a restricted state.
            </li>
            <li>
                When a warrant is running under a speed change restriction, The timing between throttle commands
                has be improved.
            </li>
        </ul>


   <h3>WiThrottle Server</h3>
        <a id="WS" name="WS"></a>
        <ul>
            <li>Added a "TelnetTrain.py" example to run a train from the Python command line.</li>
        </ul>

   <h3>Web Access</h3>
        <a id="WA" name="WA"></a>
        <ul>
            <li>Multiple updates to JavaScript libraries shipped with JMRI.</li>
        </ul>

   <h3>Web Server</h3>
        <a id="server" name="server"></a>
        <ul>
            <li>Support for display and interaction with (Control) Panel slipTurnoutIcons has been added
            to JMRI Web Server Panels.<br>
            This includes double and single slips, three-way turnouts and scissors with 2 or 4 turnouts.</li>
        </ul>

    <h3>Miscellaneous</h3>
        <a id="Misc" name="Misc"></a>
        <ul>
            <li>This is the first test release that requires Java 11.
                As part of that, there were extensive changes to
                the underlying infrastructure. See PR
                <a href="https://github.com/JMRI/JMRI/pull/10278">#10278</a>
                and following PRs with the
                <a href="https://github.com/JMRI/JMRI/issues?q=label%3A%22Java+11%22">Java 11 label</a>.
            </li>
            <li>Personal and development builds after this release will
                be called 4.99.1plus instead of the prior convention of
                calling them 4.99.2ish.  This should only affect JMRI
                developers.
            </li>
            <li>SpotBugs has been updated to 4.5.0</li>
            <li>Improved accessibility of throttle keyboard shortcut help.</li>
            <li>Developers: The
                <a href="https://www.jmri.org/help/en/html/doc/Technical/Patterns.shtml#typescript">Typescript and Javascript support</a>
                has been updated.</li>
            <li>Developers: The
                <a href="https://www.jmri.org/help/en/html/doc/Technical/Patterns.shtml#typescript">Typescript and Javascript support</a>
                has been updated.</li>
            <li>The included 'ajv' and 'fast-deep-equal' web packages have been updated.</li>
            <li>Improved XSLT display of many elements in panel XML files.</li>
            <li>Remove the <em>Store Only table content (No Panels)...</em> option from the File menu
            used by the PanelPro tables.</li>
            <li>When running the <strong>JmriFaceless</strong> application, the panels (PE/CPE/LE/SE)
            in the xml data file (aka Panel file) are not loaded.</li>
            <li>Add a search feature to the JmriHelp local web page.</li>
            <li>The method JUnitUtil.releaseThread(this) and JUnitUtil.releaseThread(this, delay)
            has been removed. Use JUnitUtil.waitFor(int time) instead. Replace the call
            JUnitUtil.releaseThread(this) with JUnitUtil.waitFor(JUnitUtil.DEFAULT_RELEASETHREAD_DELAY);</li>
            <li>Improve Block tracking in the case of a broken train being rejoined.
            <li>Multiple updates to the Bachrus/KPF-Zeller speedometer support:
                <ul>
                <li>Improved GUI
                <li>Now handles programming on main without needing to go to service track first
                <li>Improved speed matching algorithm
                <li>Updated docs
                </ul>
           <li>Fixed an issue where ZSH-using developers might not be able to use ./runtest.csh</li>
            <li>Update commons-io library to version 2.11.0 from 2.6. JMRI uses this for file selectors.</li>
            <li>Updated jsoup library to 1.14.3 from 1.13.1. JMRI uses this when rebuilding help metadata.</li>
            <li>Update for multiple hardware clocks.</li>
            <li>Resolved multiple Spotbugs code warnings. </li>
            <li>The xercesImpl library was updated to 2.12.2, which may change
                the content of some error messages.</li>
            <li>The macOS and Linux startup scripts now will use a JVM
                found within a "jre" directory within the JMRI program directory.
                This lets you install a JVM (JRE or JDK) locally just for
                JMRI's use.
            <li>The Transit and Section classes have been refactored into an
                interface with DefaultTransit and DefaultSection implementations
                respectively.  Similar transforms have been done to
                TransitManager and SectionManager. None of the production code
                nor distributed scripts needed changes, as you still create
                and access Transits and Sections via their managers obtained
                from the InstanceManager. The SectionType constants in Section
                has also been converted to an enum.
            <li>Many logging changes to resolve Spotbug SLF4J_FORMAT_SHOULD_BE_CONST
        </ul>

   <!--#include virtual="/Footer.shtml" -->
  </div><!-- closes #mainContent-->
  </div> <!-- closes #mBody-->
  <script src="/js/main.js"></script>
</body>
</html>
