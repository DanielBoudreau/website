<!DOCTYPE html>
<html lang="en">

<head>
 <meta http-equiv="content-type" content="text/html; charset=utf-8">
 <title>
    JMRI: Release Notes for 5.7.5
 </title>
    <meta content="Bob Jacobsen" name="author">
    <meta name="keywords" content="java model railroad JMRI 5.7.5 decoderpro panelpro loconet lenz nce easydcc dcc nmra">

 <!--#include virtual="/Style.shtml" -->
</head>

<body>
<!--#include virtual="/Header.shtml" -->

<div id="mBody">
    <!--#include virtual="../download/Sidebar.shtml" -->
    <div id="mainContent">
      <h1>
      Release Notes for JMRI 5.7.5 release
      </h1>

    <p>Date: March 9, 2024</p>
    <p>From: Bob Jacobsen</p>
    <p>Subject: Test Release 5.7.5 of JMRI/DecoderPro is available for download.</p>

<!-- 
<p><b>This is a draft release note only; the download links do not yet work</b></p>
 -->

<h2>Notes:</h2>

<p>This is a test release.  Please
<a href="https://groups.io/g/jmriusers">post a note</a>
if you encounter any new or old bugs!
And please back up your JMRI files before installing this, in case you want to go
back to an earlier version.</p>

<p>This is the next in a series of 5.7.* test releases.
It requires Java 11 to work.
(See <a href="http://jmri.org/java">our page on downloading Java 11</a>)
We expect this series to end in the next JMRI 5.8 production release in June 2024.
(See the <a href="https://github.com/JMRI/JMRI/milestones?direction=asc&sort=due_date&state=open"><em>tentative</em> release schedule</a>)
</p>

<!--
<P>We are getting close to the next production release, so we would particularly
appreciate your testing of this release to make sure it works for you. That way,
if you find new problems, we can try to fix them before the production release.</P>
 -->

<p>Some of the changes involved are quite extensive.
They may require a certain amount of experience before they are working well.
Therefore, this test release should be considered experimental.
We would appreciate your feedback on it.</p>

<p><b>
JMRI is now only available under the
<a href="/COPYING">GNU General Public License</a>. For more information, please
see our
<a href="/Copyright.html">copyright and licensing page</a>.</b></p>

<a id="update" name="update"></a>
<h3>Update From Older JMRI Versions</h3>

If you are currently using a version older than JMRI 5.0, please follow these instructions carefully:
<ol>
<li>Is your current version older than <a href="jmri4.12.shtml">JMRI 4.12</a>?
    If so, then update to <a href="jmri4.12.shtml">JMRI 4.12</a> first, and ensure everything works correctly: check
    start-up, check things you need to be working, and check the JMRI log as well) before doing anything else.
    Store your configuration and panel files under a new name and use those from now on.
    Then continue with step 2.
    <p>
    If you are currently using JMRI 4.7.3 or earlier on Linux or macOS (Windows doesn't need this),
    then it's <u>very important</u>
    that you update to <a href="jmri4.12.shtml">JMRI 4.12</a> and
    carrying out the <a href="jmri4.12.shtml#migration">migration process described in the JMRI 4.12 release note</a>
    before updating to any later release.
    </li>

<li>Is your current version older than <a href="jmri4.20.shtml">JMRI 4.20</a>?
    Then update to <a href="jmri4.20.shtml">JMRI 4.20</a> first, and ensure that works correctly (check
    start-up, check things you need to be working, and check the JMRI log as well) before doing anything else.
    Save your preferences again.
    Store your configuration and panel files under a new name, use those from now on, and go on to step 3.</li>

<li>Is your current version older than <a href="jmri4.24.shtml">JMRI 4.24</a>?
    Then update to <a href="jmri4.24.shtml">JMRI 4.24</a> first, and ensure that works correctly (check
    start-up, check things you need to be working, and check the JMRI log as well) before doing anything else.
    Save your preferences again.
    Store your configuration and panel files under a new name and use those from now on.</li>

<li>Is your current version older than <a href="jmri5.0.shtml">JMRI 5.0</a>?
    Then update to <a href="jmri5.0.shtml">JMRI 5.0</a> first, and ensure that works correctly (check
    start-up, check things you need to be working, and check the JMRI log as well) before doing anything else.
    Save your preferences again.
    Store your configuration and panel files under a new name and use those from now on.</li>

<li>You can then install this release.

</ol>

Following this multi-step order of updating via stable major releases safeguards you against possible migration issues
that can arise from skipping these versions.

<a id="problems" name="problems"></a>
<h3>New problems with this release</h3>
<ul>
    <li>None yet</li>
</ul>
<!--
If any of those affect you, please either
wait for
<a href="jmri5.7.6.shtml">JMRI 5.7.6</a>, due out shortly after this one,
or (once there's a fix for the problem) pick up a
<a href="https://builds.jmri.org/jenkins/job/development/job/packages/">JMRI development build installer</a>
from
<a href="https://builds.jmri.org/jenkins/job/development/job/packages/">Jenkins</a>.</p>
 -->

<a id="warnings" name="warnings"></a>
<h3>New warnings for this release:</h3>

<ul>
    <li>None Yet</li>
</ul>


<h3>Older warnings</h3>

See the <a href="jmri5.6.shtml#warnings">JMRI 5.6 release note</a> for more warnings predating the 5.7 development series,
including pointers to various migration issues.
These may be relevant to you if you're updating from an earlier version;
we strongly recommend you update to at least <a href="jmri5.0.shtml">JMRI 5.0</a>
before installing this test release.
See <a href="#update">instructions above</a>.

<ul>
    <li><span class="since">Since <a href="jmri4.99.1.shtml">JMRI 4.99.1</a></span>
        This test release, and all subsequent ones, require the use of
        Java 11 or later.  Java 8 is explicitly not supported.
        There's more information on this migration on the
        <a href="https://www.jmri.org/help/en/html/doc/Technical/TechRoadMap.shtml">JMRI Tech Road Map</a> and
        <a href="https://www.jmri.org/help/en/html/doc/Technical/JVMCapabilities.shtml">JVM Capabilities</a> pages.
    </li>
    <li><span class="since">Since <a href="jmri5.5.3.shtml">JMRI 5.5.3</a></span>
        Scripts that output Logging statements with log4jv1.x ( org.apache.log4j ) imports will stop working 
        from JMRI 5.5.4 and should be updated to use SLF4J logging.
        <br>See <a href="https://github.com/JMRI/JMRI/pull/12237/files">here</a> for some examples on how to do this.</li>
    <li><span class="since">Since <a href="jmri5.5.4.shtml">JMRI 5.5.4</a></span>
        Custom default.lcf Logging Control Files will cease to take effect from JMRI 5.5.4
        <br>To create a custom default_lcf.xml in the new Logging Configuration format, see 
        <a href="https://www.jmri.org/help/en/html/apps/Debug.shtml">JMRI Debugging and Logging</a>
    </li>
    <li><span class="since">Since <a href="jmri5.5.5.shtml">JMRI 5.5.5</a></span>
        XML files with table contents and panels have been changed in JMRI 5.5.5. It's therefore not
        possible to load an xml file with tables and panels that has been created with JMRI 5.5.5 or
        later with a JMRI version pre 5.5.5.
    </li>
    <li><span class="since">Since <a href="jmri5.5.5.shtml">JMRI 5.5.5</a></span>
        MQTT Connection - Throttle loco address and function placeholders in MQTT topics have changed from
        $address and $function to {0} and {1} for consistency with other objects.
    </li>
    <li><span class="since">Since <a href="jmri5.7.1.shtml">JMRI 5.7.1</a></span>
        Several systems have had extensive updates to their serial
        support.  If you have trouble connecting to your layout hardware
        after installing this version, please contact us
        <a href="https://groups.io/g/jmriusers">on the JMRIusers list</a>
        for assistance.
    </li>

</ul>

<a id="download" name="download"></a>
<h2>Download links:</h2>

<div class="wide">
<ul>
<li>OS X / macOS: <a
	href="https://github.com/JMRI/JMRI/releases/download/v5.7.5/JMRI.5.7.5+R4933de1fc8.dmg">https://github.com/JMRI/JMRI/releases/download/v5.7.5/JMRI.5.7.5+R4933de1fc8.dmg</a><br/>
  sha256: 3ff5b2ea54d29748bb52ec257e3b63a2c66cef906e5d86eaf6d4284e1a635512 </li>

<li>Windows: <a
	href="https://github.com/JMRI/JMRI/releases/download/v5.7.5/JMRI.5.7.5+R4933de1fc8.exe">https://github.com/JMRI/JMRI/releases/download/v5.7.5/JMRI.5.7.5+R4933de1fc8.exe</a><br/>
   sha256: 459488dd41c694b7f5da1a7ca2c6013c6e5f338a1960dce7f87340857520ca77</li>

<li>Linux: <a
	href="https://github.com/JMRI/JMRI/releases/download/v5.7.5/JMRI.5.7.5+R4933de1fc8.tgz">https://github.com/JMRI/JMRI/releases/download/v5.7.5/JMRI.5.7.5+R4933de1fc8.tgz</a><br/>
   sha256: 2e86250879ffb639d99c4a4ae5b651d1a42ca08f6e09d3301816d1f5ebbbbbed</li>
</ul>
</div>
These files are located in the 
<a href="https://github.com/JMRI/JMRI/releases/tag/v5.7.5">JMRI 5.7.5  GitHub release</a>.

<!-- 
Preliminary build files (not the final released files) can be found
on the
<a href="https://builds.jmri.org/jenkins/job/testreleases/job/5.7.5/">CI project page</a>.
 -->

<!-- 
During development leading to the actual release, you can find test download files on the
<a href="https://builds.jmri.org/jenkins/job/development/job/packages/">continuous integration build page</a>.
These are development files, and might not be working at any particular time.</p>
 -->

<a id="changes" name="changes"></a>
<h2>Changes since <a href="jmri5.7.4.shtml">Test Release 5.7.4</a>:</h2>

The <a href="https://github.com/JMRI/JMRI/issues?utf8=âœ“&q=milestone%3A5.7.5+is%3Amerged">list of included changes</a> is available from our
<a href="https://github.com/JMRI/JMRI">GitHub code repository</a>.


    <h3>Hardware Support</h3>

        <h4><a href="http://openlcb.org">OpenLCB</a> / LCC</h4>
            <ul>
                <li>Updated the OpenLCB_Java library ot version 0.7.35 with improvements:
                    <ul>
                        <li>Better display of frames with leading zeros on their aliases
                        <li>Better handling of unexpected alias collisions.  These shouldn't
                            actually happen if all goes well, but just in case it doesn't...
                        <li>Adds support for the Verify Node Addressed message
                    </ul>
                </li>
                <li>Additions for better conformance with OpenLCB standards</li>
                <li>Add the <strong>STL Editor</strong> tool to the OpenLCB/LCC menu.  The
                tool is used to generate the STL logic for the RR-CirKits Tower LCC+Q.  The
                Tower LCC+Q uses a subset of the Siemens Structured List PLC language.</li>
            </ul>

    <h3>New / Updated decoder definitions</h3>

        <h4>ZIMO</h4>
            <ul>
                <li>LIPLDNW1 (N, TT) light bar</li>
                <li>LIPLDNY1 (N, TT) light bar</li>
                <li>LIPLDHW1 (H0, TT) light bar</li>
                <li>LIPLDHY1 (H0, TT) light bar</li>
                <li>LIPLDGY1 (G, 1, 2) light bar</li>
                <li>LIPLDGW1 (G, 1, 2) light bar</li>
            </ul>


   <h3>Dispatcher</h3>
        <a id="Dispatcher" name="Dispatcher"></a>
        <ul>
             <li>Add an option to Ramp up and down using the speed profile such that the speed change takes place over the length of the section.</li>
        </ul>

    <h3>LogixNG</h3>
        <a id="LogixNG" name="LogixNG"></a>
        <ul>
          <li>Conversion to boolean has changed. Before JMRI 5.7.5,
              conversion from a string to boolean returned
              <strong>True</strong> if the string was not empty, and
              <strong>False</strong> if the string was empty. With JMRI 5.7.5,
              this has changed so that a string that's <strong>true</strong>
              (case insensitive) returns a boolean <strong>True</strong>
              and a string that's <strong>false</strong> (case insensitive)
              returns a boolean <strong>False</strong>. All other string
              values throw an exception. The earlier behaviour was not
              documented so it's unlikely that this affects users.<br>
              The old behaviour was based on how Jython converts a string
              to boolean. If you want the old behaviour, you can use the
              LogixNG formula function <strong>boolJython()</strong>.</li>
          <li>Local variables and Global variables can now be initialized
              to boolean values as well. True or false. Case insensitive.</li>
          <li>The action <strong>Log local variables</strong> now has the
              option <strong>Show class name</strong>.If it is selected,
              the name of the class will be shown after the value. This
              is useful for debugging, when you want to know the type of
              the value.</li>
          <li>The LogixNG function <strong>int()</strong> previously returned a Java
              <strong>Integer</strong> instead of a Java <strong>Long</strong>.
              This bug is now corrected. It shouldn't affect any existing
              LogixNGs. The difference between <strong>Integer</strong> and
              <strong>Long</strong> is that <strong>Long</strong> can handle
              much bigger integer values than <strong>Integer</strong>.</li>
          <li>The LogixNG action <strong>Enable/Disable LogixNG</strong>
              has been added.</li>
          <li>LogixNG formulas now supports Java arrays as well, for example
              if you use the Java method <strong>split()</strong> to split
              a string. Example:
              <br>
              <pre>
LogixNG: IQ:AUTO:0001
    ConditionalNG: IQC:AUTO:0001
        ! A
            Many
               ::: Local variable "a_b", init to String "Hello_World"
               ::: Local variable "a", init to None ""
               ::: Local variable "b", init to None ""
               ::: Local variable "a_b_array", init to None ""
                ! A1
                    Digital Formula: a_b_array = a_b.split("\_")
                ! A2
                    Digital Formula: a = a_b_array[0]
                ! A3
                    Digital Formula: b = a_b_array[1]
                ! A4
                    Log local variables
              </pre>
              </li>
          <li>The LogixNG action <strong>For each</strong> now supports
              Java arrays as well, for example the result of the expression
              <strong>a_b.split("\_")</strong>.</li>
          <li>The LogixNG action <strong>Set reporter</strong> has been
              added.</li>
          <li>The actions <strong>Listen on Beans ...</strong> have been
              updated to fix a problem when several beans changes
              state at the same time.</li>
          <li>Fixes a bug so that the methods <strong>toString()</strong>,
              <strong>getKey()</strong> and <strong>getValue()</strong>
              can be used for an item when using the action <strong>For each</strong>
              on a Map.</li>
          <li>Adds the LogixNG functions <strong>strlen()</strong> in module
              <strong>String</strong> and <strong>length()</strong> in module
              <strong>Common</strong>.</li>
          <li>Bug fix: The LogixNG function <strong>boolJython()</strong>
              now return false if the value is an empty array. It returns
              true if the value is a non empty array.</li>
          <li>Bug fix: The LogixNG function <strong>evaluateMemory()</strong>
              didn't behaved as documented. It's now fixed.</li>
          <li>The LogixNG functions <strong>cos()</strong>, <strong>tan()</strong>,
              <strong>atan()</strong>, <strong>sqr()</strong> and
              <strong>sqrt()</strong> has been added to the <strong>Math</strong>
              module.</li>
          <li></li>
        </ul>

    <h3>Operations</h3>
        <a id="Operations" name="Operations"></a>
        <ul>
            <li>New feature allows users to quickly create a custom load for all car types.</li>
        </ul>

    <h3>Scripting</h3>
        <a id="Scripting" name="Scripting"></a>
        <ul>
            <li>Added three sample scripts
                <ul>
                    <li>AddPowerButton.py - shows how to add a button to the main
                            PanelPro window. In this case, the button turns power on and off.
                    <li>MainWindowToBack.py - moves the main PanelPro window to the back.
                            Useful when you want PanelPro to start up with a panel
                            at the front of the screen.
                    <li>MenuItemDisable.py - shows how to disable menu items so they
                            can't be used.  Sample disables LocoNet ability to reset slots,
                            and ability to start the WiThrottle server.  Meant for e.g.
                            club use.
                </ul>
            </li>
        </ul>

    <h3>Miscellaneous</h3>
        <a id="Misc" name="Misc"></a>
        <ul>
            <li>Improve handling of block values that contain IdTags
                across shutdown and startup.</li>
        </ul>


   <!--#include virtual="/Footer.shtml" -->
  </div><!-- closes #mainContent-->
  </div> <!-- closes #mBody-->
  <script src="/js/main.js"></script>
</body>
</html>
